/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Interface;

import java.awt.Color;
import java.awt.Font;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Properties;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;

/**
 *
 * @author acer
 */
public class AddEmployees extends javax.swing.JInternalFrame {
    Connection conn=null;
    PreparedStatement pst=null;
    ResultSet rs=null;
    String sqr;
    
    public static String feid=null;
   public static String fename=null;

    /**
     * Creates new form AddEmployees
     */
    public AddEmployees() {
        initComponents();
        conn=DBConnect.connect();
        autoId();
        tablelord();
       // combolord();
        
        btnadd.setEnabled(false);
        btndelete.setEnabled(false);
        btnupdate.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    private void clear()
    {
    txtname.setText("");
    txtadress.setText("");
    txthtp.setText("");
    txtmtp.setText("");
    txtemail.setText("");
    ((JTextField)dtdate.getDateEditor().getUiComponent()).setText("");
    
    }
    
    private void autoId()
    {
        try {
             String sql="SELECT eid FROM employee ORDER BY eid DESC LIMIT 1";
           // String q="SELECT returndate FROM borrowdetails where mid='"+ name +"'";
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();
           if(rs.next())
           {
                String rnno=rs.getString("eid");
                int co=rnno.length();
               String txt= rnno.substring(0, 2);
               String num=rnno.substring(2, co);
               int n=Integer.parseInt(num);
               n++;
               String snum=Integer.toString(n);
               String ftxt=txt+snum;
               txteid.setText(ftxt);
            
           }
           else
           {
               txteid.setText("EM1000");
           }
           
                            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e);
        }
       
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txteid = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtname = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtadress = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txthtp = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtmtp = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtemail = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        dtdate = new com.toedter.calendar.JDateChooser();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtsearch = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblemployee = new javax.swing.JTable();
        btnadd = new javax.swing.JButton();
        btnupdate = new javax.swing.JButton();
        btndelete = new javax.swing.JButton();
        jButtonallocate = new javax.swing.JButton();
        jButtonclear = new javax.swing.JButton();
        lbleeid = new javax.swing.JLabel();

        jPanel1.setBackground(new java.awt.Color(255, 0, 0));

        jLabel18.setFont(new java.awt.Font("Microsoft Tai Le", 1, 24)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("Employees Manage");
        jPanel1.add(jLabel18);

        jLabel1.setFont(new java.awt.Font("Microsoft Tai Le", 1, 16)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 45, 86));
        jLabel1.setText("NIC");

        txteid.setEditable(false);
        txteid.setFont(new java.awt.Font("Monospaced", 1, 13)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Microsoft Tai Le", 1, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 45, 86));
        jLabel2.setText("Name");

        txtname.setFont(new java.awt.Font("Monospaced", 1, 13)); // NOI18N
        txtname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtnameKeyReleased(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Microsoft Tai Le", 1, 16)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 45, 86));
        jLabel3.setText("Address");

        txtadress.setColumns(20);
        txtadress.setFont(new java.awt.Font("Monospaced", 1, 13)); // NOI18N
        txtadress.setRows(5);
        jScrollPane1.setViewportView(txtadress);

        jLabel4.setFont(new java.awt.Font("Microsoft Tai Le", 1, 16)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 45, 86));
        jLabel4.setText("TP Number");

        jLabel5.setFont(new java.awt.Font("Microsoft Tai Le", 1, 16)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 45, 86));
        jLabel5.setText("Home");

        txthtp.setFont(new java.awt.Font("Monospaced", 1, 13)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Microsoft Tai Le", 1, 16)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 45, 86));
        jLabel6.setText("Mobile");

        txtmtp.setFont(new java.awt.Font("Monospaced", 1, 13)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Microsoft Tai Le", 1, 16)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 45, 86));
        jLabel7.setText("Email");

        txtemail.setFont(new java.awt.Font("Monospaced", 1, 13)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Microsoft Tai Le", 1, 16)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 45, 86));
        jLabel8.setText("Date");

        dtdate.setDateFormatString("yyyy-MM-dd");
        dtdate.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N

        jLabel9.setFont(new java.awt.Font("Microsoft Tai Le", 1, 16)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 45, 86));
        jLabel9.setText("CID");

        jLabel10.setFont(new java.awt.Font("Microsoft Tai Le", 1, 16)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 45, 86));
        jLabel10.setText("Customer Name");

        txtsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtsearchActionPerformed(evt);
            }
        });
        txtsearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtsearchKeyReleased(evt);
            }
        });

        tblemployee.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tblemployee.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tblemployee.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblemployeeMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblemployee);

        btnadd.setBackground(new java.awt.Color(102, 102, 102));
        btnadd.setFont(new java.awt.Font("Microsoft Tai Le", 1, 16)); // NOI18N
        btnadd.setForeground(new java.awt.Color(255, 255, 255));
        btnadd.setText("Add");
        btnadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnaddActionPerformed(evt);
            }
        });

        btnupdate.setBackground(new java.awt.Color(102, 102, 102));
        btnupdate.setFont(new java.awt.Font("Microsoft Tai Le", 1, 16)); // NOI18N
        btnupdate.setForeground(new java.awt.Color(255, 255, 255));
        btnupdate.setText("Update");
        btnupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnupdateActionPerformed(evt);
            }
        });

        btndelete.setBackground(new java.awt.Color(102, 102, 102));
        btndelete.setFont(new java.awt.Font("Microsoft Tai Le", 1, 16)); // NOI18N
        btndelete.setForeground(new java.awt.Color(255, 255, 255));
        btndelete.setText("Delete");
        btndelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeleteActionPerformed(evt);
            }
        });

        jButtonallocate.setBackground(new java.awt.Color(102, 102, 102));
        jButtonallocate.setFont(new java.awt.Font("Microsoft Tai Le", 1, 16)); // NOI18N
        jButtonallocate.setForeground(new java.awt.Color(255, 255, 255));
        jButtonallocate.setText("Allocate Job");
        jButtonallocate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonallocateActionPerformed(evt);
            }
        });

        jButtonclear.setBackground(new java.awt.Color(102, 102, 102));
        jButtonclear.setFont(new java.awt.Font("Microsoft Tai Le", 1, 16)); // NOI18N
        jButtonclear.setForeground(new java.awt.Color(255, 255, 255));
        jButtonclear.setText("Clear");
        jButtonclear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonclearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 900, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(83, 83, 83)
                        .addComponent(txteid, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbleeid, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(txtsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(65, 65, 65)
                                        .addComponent(txtname, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(50, 50, 50)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addGap(14, 14, 14)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(15, 15, 15)
                                        .addComponent(txthtp, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(100, 100, 100)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(7, 7, 7)
                                        .addComponent(txtmtp, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(3, 3, 3)
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(47, 47, 47)
                                        .addComponent(txtemail, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(54, 54, 54)
                                        .addComponent(dtdate, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(btnadd, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(btnupdate, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(btndelete, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(100, 100, 100)
                                .addComponent(jButtonallocate, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40)
                                .addComponent(jButtonclear, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txteid, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10)
                            .addComponent(txtsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(lbleeid, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtname, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txthtp, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtmtp, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtemail, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dtdate, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnadd, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnupdate, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btndelete, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonallocate, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonclear, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtnameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtnameKeyReleased

        btnadd.setEnabled(true);

    }//GEN-LAST:event_txtnameKeyReleased

    private void txtsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtsearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtsearchActionPerformed

    private void txtsearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtsearchKeyReleased

        lbleeid.setText("");
        try {

            String parseSql="SELECT `eid` as 'EID', `e_name` as 'Employee Name', `e_adress` as 'Employee Adress', `e_ho_num` 'TP Home', `e_mo_num` as 'TP Mobile', `e_email` as 'Email', `e_date` as 'Register Date' FROM `employee` where e_name Like'%"+txtsearch.getText()+"%'";
            pst=conn.prepareStatement(parseSql);
            rs=pst.executeQuery();
            tblemployee.setModel(net.proteanit.sql.DbUtils.resultSetToTableModel(rs));
            theader();
        } catch (Exception e) {
        }

    }//GEN-LAST:event_txtsearchKeyReleased

    private void tblemployeeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblemployeeMouseClicked

        DefaultTableModel tmodel=(DefaultTableModel)tblemployee.getModel();
        int selectrowindex=tblemployee.getSelectedRow();
        txteid.setText(tmodel.getValueAt(selectrowindex, 0).toString());
        txtname.setText(tmodel.getValueAt(selectrowindex, 1).toString());
        txtadress.setText(tmodel.getValueAt(selectrowindex, 2).toString());
        txthtp.setText(tmodel.getValueAt(selectrowindex, 3).toString());
        txtmtp.setText(tmodel.getValueAt(selectrowindex, 4).toString());
        txtemail.setText(tmodel.getValueAt(selectrowindex, 5).toString());
        ((JTextField)dtdate.getDateEditor().getUiComponent()).setText((tmodel.getValueAt(selectrowindex, 6).toString()));

        lbleeid.setText(tmodel.getValueAt(selectrowindex, 0).toString());
        txtsearch.setText(tmodel.getValueAt(selectrowindex, 1).toString());

        feid=txteid.getText();
        fename=txtsearch.getText();

        btndelete.setEnabled(true);
        btnupdate.setEnabled(true);
        btnadd.setEnabled(true);
    }//GEN-LAST:event_tblemployeeMouseClicked

    private void btnaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnaddActionPerformed

        String eid=txteid.getText();
        String name=txtname.getText();
        String adress=txtadress.getText();
        String htp=txthtp.getText();
        String mtp=txtmtp.getText();
        String email=txtemail.getText();
        String date=((JTextField)dtdate.getDateEditor().getUiComponent()).getText();

        try {
            String q= "INSERT INTO `employee`(`eid`, `e_name`, `e_adress`, `e_ho_num`, `e_mo_num`, `e_email`, `e_date`) VALUES ('"+eid+"','"+name+"' ,'"+adress+"' ,'"+htp+"' ,'"+mtp+"' ,'"+email+"' ,'"+date+"')";
            pst=conn.prepareStatement(q);
            pst.execute();
            JOptionPane.showMessageDialog(rootPane,"Successfully registered");

        }
        catch (Exception e)
        {

            JOptionPane.showMessageDialog(rootPane,e);
        }
        feid=txteid.getText();
        fename=txtname.getText();
        lbleeid.setText(feid);
        txtsearch.setText(fename);

        clear();
        autoId();
        tablelord();
        btnadd.setEnabled(false);

    }//GEN-LAST:event_btnaddActionPerformed

    private void btnupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnupdateActionPerformed

        String eid=txteid.getText();
        String name=txtname.getText();
        String adress=txtadress.getText();
        String htp=txthtp.getText();
        String mtp=txtmtp.getText();
        String email=txtemail.getText();
        String date=((JTextField)dtdate.getDateEditor().getUiComponent()).getText();

        int x=JOptionPane.showConfirmDialog(rootPane, "Do you realy want to update");
        if(x==0)
        {
            try {
                String squpdate = "UPDATE `employee` SET `eid`='"+eid+"',`e_name`='"+name+"',`e_adress`='"+adress+"',`e_ho_num`='"+htp+"',`e_mo_num`='"+mtp+"',`e_email`='"+email+"',`e_date`='"+date+"' WHERE eid='"+txteid.getText()+"'";
                pst=conn.prepareStatement(squpdate);
                pst.execute();
                tablelord();
                JOptionPane.showMessageDialog(rootPane,"Successfully Updated");
            }

            catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane,e);
            }

        }

        feid=txteid.getText();
        fename=txtname.getText();
        lbleeid.setText(feid);
        txtsearch.setText(fename);
        clear();
        tablelord();
        autoId();
        btndelete.setEnabled(false);
        btnupdate.setEnabled(false);

    }//GEN-LAST:event_btnupdateActionPerformed

    private void btndeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeleteActionPerformed

        int x=JOptionPane.showConfirmDialog(rootPane, "Do you realy want to delete");
        if(x==0)
        {
            try {
                String sql="DELETE FROM customer where eid='"+ txteid.getText() +"'";
                pst=conn.prepareStatement(sql);
                pst.execute();

                tablelord();
                clear();
                JOptionPane.showMessageDialog(rootPane,"Successfully Deleted");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane,e);
            }

        }
        lbleeid.setText("");
        txtsearch.setText("");
        //        cmbselect.setSelectedIndex(0);
        //        itmname.setText("");
        btndelete.setEnabled(false);
        btnupdate.setEnabled(false);

    }//GEN-LAST:event_btndeleteActionPerformed
private void sendEmails() {
    try {
        // SQL query to retrieve email addresses from the employee table
        String sql = "SELECT e_email FROM `employee`;";
        pst = conn.prepareStatement(sql);
        rs = pst.executeQuery();

        // Loop through the result set and send emails
        while (rs.next()) {
            String to = rs.getString("e_email");
            String subject = "Alert!!";
            String message = "Dear Employee,\n\nReport right now a car has arrived and yet to clean or service.";

            // Call the sendEmail method to send the email
            sendEmail(to, subject, message);
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(rootPane, e);
    }
}
private void sendEmail(String to, String subject, String message) {
    // Replace these values with your email and password
    final String from = "sasindusavi@gmail.com";
    final String password = "izip voot slgp anwh";

    // Set the host and port for the SMTP server (e.g., Gmail's SMTP server)
    String host = "smtp.gmail.com";
    String port = "587";

    // Set the properties for the JavaMail API
    Properties properties = new Properties();
    properties.put("mail.smtp.host", host);
    properties.put("mail.smtp.port", port);
    properties.put("mail.smtp.auth", "true");
    properties.put("mail.smtp.starttls.enable", "true");

    // Get the Session object
    Session session = Session.getInstance(properties,
            new javax.mail.Authenticator() {
                protected PasswordAuthentication getPasswordAuthentication() {
                    return new PasswordAuthentication(from, password);
                }
            });

    try {
        // Create a default MimeMessage object
        Message emailMessage = new MimeMessage(session);

        // Set From: header field of the header
        emailMessage.setFrom(new InternetAddress(from));

        // Set To: header field of the header
        emailMessage.setRecipients(Message.RecipientType.TO, InternetAddress.parse(to));

        // Set Subject: header field
        emailMessage.setSubject(subject);

        // Now set the actual message
        emailMessage.setText(message);

        // Send message
        Transport.send(emailMessage);

        System.out.println("Sent message successfully to " + to);
    } catch (MessagingException e) {
        throw new RuntimeException(e);
    }
}
    private void jButtonallocateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonallocateActionPerformed

sendEmails();

    }//GEN-LAST:event_jButtonallocateActionPerformed

    private void jButtonclearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonclearActionPerformed

        clear();
        autoId();
        tablelord();
        //        cmbselect.setSelectedIndex(0);
        //        itmname.setText("");
        lbleeid.setText("");
        txtsearch.setText("");
    }//GEN-LAST:event_jButtonclearActionPerformed

    private void tablelord()
    {
        try {
            String sql="SELECT `eid` as 'EID', `e_name` as 'Employee Name', `e_adress` as 'Employee Adress', `e_ho_num` 'TP Home', `e_mo_num` as 'TP Mobile', `e_email` as 'Email', `e_date` as 'Register Date' FROM `employee`";
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();
            tblemployee.setModel(net.proteanit.sql.DbUtils.resultSetToTableModel(rs));
            
        } catch (Exception e) {
            JOptionPane.showConfirmDialog(rootPane, e);
        }
       theader();
    }

    private void  theader()
    {
    JTableHeader thead = tblemployee.getTableHeader();
       thead.setForeground(Color.BLUE);
    
       thead.setFont(new Font("Tahome", Font.BOLD, 14));
       
        TableColumn col1=tblemployee.getColumnModel().getColumn(0);
        col1.setPreferredWidth(80);
        TableColumn col2=tblemployee.getColumnModel().getColumn(1);
        col2.setPreferredWidth(130);
        TableColumn col3=tblemployee.getColumnModel().getColumn(2);
        col3.setPreferredWidth(150);
        TableColumn col4=tblemployee.getColumnModel().getColumn(3);
        col4.setPreferredWidth(100);
        TableColumn col5=tblemployee.getColumnModel().getColumn(4);
        col5.setPreferredWidth(105);
        TableColumn col6=tblemployee.getColumnModel().getColumn(5);
        col6.setPreferredWidth(150);
        TableColumn col7=tblemployee.getColumnModel().getColumn(6);
        col7.setPreferredWidth(110);
        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnadd;
    private javax.swing.JButton btndelete;
    private javax.swing.JButton btnupdate;
    private com.toedter.calendar.JDateChooser dtdate;
    private javax.swing.JButton jButtonallocate;
    private javax.swing.JButton jButtonclear;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbleeid;
    private javax.swing.JTable tblemployee;
    private javax.swing.JTextArea txtadress;
    private javax.swing.JTextField txteid;
    private javax.swing.JTextField txtemail;
    private javax.swing.JTextField txthtp;
    private javax.swing.JTextField txtmtp;
    private javax.swing.JTextField txtname;
    private javax.swing.JTextField txtsearch;
    // End of variables declaration//GEN-END:variables
}
